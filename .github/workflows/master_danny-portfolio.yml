name: Build and deploy ASP app to Azure Web App - danny-portfolio

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read # This is required for actions/checkout

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: .  

      - name: Setup MSBuild path
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.5

      - name: Restore NuGet packages
        run: nuget restore BlogSystem/BlogSystem.sln

      - name: Build solution
        run: msbuild BlogSystem/BlogSystem.sln /p:Configuration=Release

      - name: Publish to folder
        run: |
          # 1. 使用绝对路径定义发布目录
          $publishDir = "${{ github.workspace }}/publish"
          
          # 2. 确保目录存在
          if (!(Test-Path $publishDir)) { New-Item -ItemType Directory -Path $publishDir -Force }
          
          # 3. 打印调试信息
          Write-Output "工作目录: $(Get-Location)"
          Write-Output "发布目录: $publishDir"
          
          # 4. 执行发布命令（关键修改）
          msbuild BlogSystem.MVCSite.csproj `
            /p:DeployOnBuild=true `
            /p:Configuration=Release `
            /p:PublishDir="$publishDir" `
            /p:DeleteExistingFiles=True `
            /t:Build;Publish
          
          # 5. 验证发布结果
          if (!(Test-Path "$publishDir/*")) {
            Get-ChildItem -Recurse | Format-Table FullName
            Write-Error "发布失败：$publishDir 为空"
            exit 1
          }
          
          # 6. 显示发布内容
          Write-Output "发布内容："
          Get-ChildItem $publishDir -Recurse | Format-Table FullName
        working-directory: BlogSystem/BlogSystem.MVCSite
        shell: pwsh

      
      - name: Check publish folder content
        run: dir publish
        working-directory: BlogSystem/BlogSystem.MVCSite
      
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: ASP-app
          path: publish/

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read # This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: ASP-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_84409302AB5A4DFE9AE6899741FD0D5D }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_68D495498CD849548FF903609041055A }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_DA91716877B04922876B8279F9BC52DA }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'danny-portfolio'
          slot-name: 'Production'
          package: ASP-app/publish/ # Artifact 下载后通常会在一个以 artifact 名称命名的文件夹下
